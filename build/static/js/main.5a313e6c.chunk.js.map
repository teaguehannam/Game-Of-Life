{"version":3,"sources":["utils/GridFunctions.js","components/Header.js","components/Box.js","components/Grid.js","components/Buttons.js","components/Home.js","components/Intro.js","App.js","index.js"],"names":["module","exports","initGrid","rows","cols","falsePercent","arr","Array","t","length","e","Math","random","gameLogic","mainGrid","secondGrid","JSON","parse","stringify","i","j","count","Header","props","className","gameState","generation","speed","toFixed","Box","boxClass","id","boxId","onClick","selectBox","row","col","Grid","rowsArr","gridStyle","gridTemplateColumns","gridSize","gridFull","push","key","style","Buttons","useState","playButton","setPlayButton","togglePlaying","oneStep","clear","randomSeed","decreaseSpeed","increaseSpeed","GridFunctions","require","Home","isPlaying","setIsPlaying","setGameState","setSpeed","useEffect","interval","setInterval","newGrid","clearInterval","gridCopy","Intro","history","App","exact","path","component","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"4KAAAA,EAAOC,QAAU,CAChBC,SAID,SAAkBC,EAAMC,GAEvB,IAFkD,IAArBC,EAAoB,uDAAL,GACxCC,EAAM,IAAIC,MAAMH,GACZI,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAK,CACnCF,EAAIE,GAAK,IAAID,MAAMH,GACnB,IAAI,IAAIM,EAAI,EAAGA,EAAIJ,EAAIE,GAAGC,OAAQC,IACjCJ,EAAIE,GAAGE,GAAKC,KAAKC,UAAYP,EAG/B,OAAOC,GAXPO,UAcD,SAAmBC,GAMlB,IALA,IAAMX,EAAOW,EAASL,OAChBL,EAAOU,EAAS,GAAGL,OACrBM,EAAaC,KAAKC,MAAMD,KAAKE,UAAUJ,IAGlCK,EAAI,EAAGA,EAAIhB,EAAMgB,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAMgB,IAAK,CAC9B,IAAIC,EAAQ,EACRF,EAAI,GACHL,EAASK,EAAI,GAAGC,IAAIC,IAErBF,EAAI,GAAKC,EAAI,GACZN,EAASK,EAAI,GAAGC,EAAI,IAAIC,IAEzBF,EAAI,GAAKC,EAAIhB,EAAO,GACnBU,EAASK,EAAI,GAAGC,EAAI,IAAIC,IAEzBD,EAAIhB,EAAO,GACVU,EAASK,GAAGC,EAAI,IAAIC,IAErBD,EAAI,GACHN,EAASK,GAAGC,EAAI,IAAIC,IAErBF,EAAIhB,EAAO,GACVW,EAASK,EAAI,GAAGC,IAAIC,IAErBF,EAAIhB,EAAO,GAAKiB,EAAI,GACnBN,EAASK,EAAI,GAAGC,EAAI,IAAIC,IAEzBF,EAAIhB,EAAO,GAAKiB,EAAIhB,EAAO,GAC1BU,EAASK,EAAI,GAAGC,EAAI,IAAIC,IAGzBP,EAASK,GAAGC,KAAOC,EAAQ,GAAKA,EAAQ,KAC3CN,EAAWI,GAAGC,IAAK,GAGfN,EAASK,GAAGC,IAAgB,IAAVC,IACtBN,EAAWI,GAAGC,IAAK,GAItB,OAAOL,K,qIC3COO,EAdA,SAACC,GAEf,OACC,yBAAKC,UAAU,UACd,yBAAKA,UAAU,OACd,2CAAiBD,EAAME,UAAUC,aAElC,yBAAKF,UAAU,OACd,6BAAM,IAAOD,EAAMI,MAAMA,MAAQ,OAAQC,QAAQ,GAAjD,WCQWC,EAhBH,SAACN,GAOZ,OACC,yBACCC,UAAWD,EAAMO,SACjBC,GAAIR,EAAMS,MACVC,QARgB,WACjBV,EAAMW,UAAUX,EAAMY,IAAKZ,EAAMa,SC0BpBC,EA7BF,SAACd,GAKb,IAJA,IAAIe,EAAU,GACVR,EAAW,GACTS,EAAY,CAACC,oBAAoB,UAAD,OAAYjB,EAAMkB,SAASrC,KAA3B,WAE9BI,EAAI,EAAGA,EAAIe,EAAMkB,SAAStC,KAAMK,IACvC,IAAI,IAAIE,EAAI,EAAGA,EAAIa,EAAMkB,SAASrC,KAAMM,IAAK,CAC5C,IAAIsB,EAAQxB,EAAI,IAAME,EACtBoB,EAAWP,EAAME,UAAUiB,SAASlC,GAAGE,GAAK,SAAW,UACvD4B,EAAQK,KACP,kBAAC,EAAD,CACCb,SAAUA,EACVc,IAAKZ,EACLA,MAAOA,EACPG,IAAK3B,EACL4B,IAAK1B,EACLwB,UAAWX,EAAMW,aAMrB,OACC,yBAAKV,UAAU,OAAOqB,MAAON,GAC3BD,ICJWQ,EArBC,SAACvB,GAAW,IAAD,EACUwB,oBAAS,GADnB,mBACnBC,EADmB,KACPC,EADO,KAQ1B,OACC,yBAAKzB,UAAU,aACd,4BAAQS,QAPS,WAClBV,EAAM2B,gBACND,GAAeD,KAKgBA,EAAa,OAAS,SACpD,4BAAQf,QAASV,EAAM4B,SAAvB,eACA,4BAAQlB,QAASV,EAAM6B,OAAvB,SACA,4BAAQnB,QAASV,EAAM8B,YAAvB,UACA,4BAAQpB,QAASV,EAAM+B,eAAvB,UACA,4BAAQrB,QAASV,EAAMgC,eAAvB,aCZGC,EAAgBC,EAAQ,IACxBhB,EAAW,CAACtC,KAAM,GAAIC,KAAM,IA+FnBsD,EA7FF,WAAM,MAGgBX,oBAAS,GAHzB,mBAGXY,EAHW,KAGAC,EAHA,OAIgBb,mBAAS,CAC1CL,SAAUc,EAActD,SAASuC,EAAStC,KAAMsC,EAASrC,MACzDsB,WAAY,IANK,mBAIXD,EAJW,KAIAoC,EAJA,OAQQd,mBAAS,CAACpB,MAAO,MARzB,mBAQXA,EARW,KAQJmC,EARI,KAelBC,qBAAU,WACT,IAAIC,EAAW,KAUf,OATIL,IACHK,EAAWC,aAAY,WACtB,IAAIC,EAAUV,EAAc3C,UAAUY,EAAUiB,UAChDmB,EAAa,CACZnB,SAAUwB,EACVxC,WAAYD,EAAUC,WAAa,MAElCC,EAAMA,QAEH,kBAAMwC,cAAcH,MACzB,CAACL,EAAWlC,EAAUiB,SAAUjB,EAAUC,WAAWC,EAAMA,QAiD9D,OACC,6BACC,kBAAC,EAAD,CAAQF,UAAWA,EAAWE,MAAOA,IACrC,kBAAC,EAAD,CAAMF,UAAWA,EAAWS,UAxCZ,SAACC,EAAKC,GACvB,IAAIuB,EAAU,CACb,IAAIS,EAAW3C,EAAUiB,SACzB0B,EAASjC,GAAKC,IAAQgC,EAASjC,GAAKC,GACpCyB,EAAa,CACZnB,SAAU0B,EACV1C,WAAYD,EAAUC,eAkC2Be,SAAUA,IAC5D,kBAAC,EAAD,CACCS,cAtEH,WACCU,GAAcD,IAsEZR,QApDa,WACf,IAAIe,EAAUV,EAAc3C,UAAUY,EAAUiB,UAChDmB,EAAa,CACZnB,SAAUwB,EACVxC,WAAYD,EAAUC,WAAa,KAiDlC0B,MAhCW,WACbS,EAAa,CACZnB,SAAUc,EAActD,SAASuC,EAASrC,KAAKqC,EAAStC,KAAM,GAC9DuB,WAAY,KA8BX2B,WAzBgB,WAClBQ,EAAa,CACZnB,SAAUc,EAActD,SAASuC,EAASrC,KAAKqC,EAAStC,KAAM,KAC9DuB,WAAY,KAuBX4B,cAbmB,WACrBQ,EAAS,CAACnC,MAAOA,EAAMA,MAAQ,MAa7B4B,cApBmB,WAClB5B,EAAMA,MAAQ,KAChBmC,EAAS,CAACnC,MAAOA,EAAMA,MAAQ,UCnDnB0C,G,MAtBD,SAAC9C,GAMd,OACC,yBAAKC,UAAU,SACd,yBAAKA,UAAU,WACd,yBAAKA,UAAU,SACd,sDAED,kDACA,wFACG,4FACA,2HAEJ,4BAAQS,QAfO,WAChBV,EAAM+C,QAAQ3B,KAAK,WAclB,gBCHY4B,MATf,WACE,OACE,yBAAK/C,UAAU,OACb,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,kBAAC,IAAD,CAAOI,KAAK,QAAQC,UAAWhB,MCF/BY,EAAUK,cAEhBC,IAASC,OACR,kBAAC,IAAD,CAAQP,QAASA,GAChB,kBAAC,EAAD,OAEDQ,SAASC,eAAe,W","file":"static/js/main.5a313e6c.chunk.js","sourcesContent":["module.exports = {\n\tinitGrid,\n\tgameLogic\n}\n\nfunction initGrid(rows, cols, falsePercent = 0.9) {\n\tlet arr = new Array(cols);\n\tfor(let t = 0; t < arr.length; t++) {\n\t\tarr[t] = new Array(cols); // create row of columns\n\t\tfor(let e = 0; e < arr[t].length; e++) {\n\t\t\tarr[t][e] = Math.random() >= falsePercent;\n\t\t}\n\t}\n\treturn arr\n}\n\nfunction gameLogic(mainGrid) {\n\tconst rows = mainGrid.length;\n\tconst cols = mainGrid[0].length;\n\tlet secondGrid = JSON.parse(JSON.stringify(mainGrid));\n\n\t// For each column in each row, count neighbors.\n\tfor (let i = 0; i < rows; i++) {\n\t\tfor (let j = 0; j < cols; j++) {\n\t\t\tlet count = 0; \n\t\t\tif (i > 0) {\n\t\t\t\tif (mainGrid[i - 1][j]) count++;\n\t\t\t} \n\t\t\tif (i > 0 && j > 0) {\n\t\t\t\tif (mainGrid[i - 1][j - 1]) count++;\n\t\t\t} \n\t\t\tif (i > 0 && j < cols - 1) {\n\t\t\t\tif (mainGrid[i - 1][j + 1]) count++;\n\t\t\t}\n\t\t\tif (j < cols - 1) {\n\t\t\t\tif (mainGrid[i][j + 1]) count++;\n\t\t\t} \n\t\t\tif (j > 0) {\n\t\t\t\tif (mainGrid[i][j - 1]) count++;\n\t\t\t}\n\t\t\tif (i < rows - 1) {\n\t\t\t\tif (mainGrid[i + 1][j]) count++;\n\t\t\t} \n\t\t\tif (i < rows - 1 && j > 0){ \n\t\t\t\tif (mainGrid[i + 1][j - 1]) count++;\n\t\t\t}\n\t\t\tif (i < rows - 1 && j < cols - 1) {\n\t\t\t\tif (mainGrid[i + 1][j + 1]) count++;\n\t\t\t}\n\t\t\t// Dead if not 2 or 3 neighbors\n\t\t\tif (mainGrid[i][j] && (count < 2 || count > 3)) {\n\t\t\t\tsecondGrid[i][j] = false;\n\t\t\t} \n\t\t\t// Alive if 3 neighbors\n\t\t\tif (!mainGrid[i][j] && count === 3) {\n\t\t\t\tsecondGrid[i][j] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn secondGrid\n}\n\n","import React from 'react';\n\nconst Header = (props) => {\n\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<div className=\"Box\">\n\t\t\t\t<h2>Generation: {props.gameState.generation}</h2>\n\t\t\t</div>\n\t\t\t<div className=\"Box\">\n\t\t\t\t<h3>{(1000 / props.speed.speed * 0.8417).toFixed(2)} FPS</h3>\n\t\t\t</div>\t\n\t\t</div>\n\t)\n}\n\nexport default Header;","import React from 'react';\n\nconst Box = (props) => {\n\t//console.log(\"Box props\", props);\n\n\tconst selectBox = () => {\n\t\tprops.selectBox(props.row, props.col)\n\t}\n\n\treturn (\n\t\t<div \n\t\t\tclassName={props.boxClass}\n\t\t\tid={props.boxId}\n\t\t\tonClick={selectBox}\n\t\t/>\n\t)\n}\n\nexport default Box;","import React from 'react';\nimport Box from './Box';\n\nconst Grid = (props) => {\n\tvar rowsArr = [];\n\tvar boxClass = \"\";\n\tconst gridStyle = {gridTemplateColumns: `repeat(${props.gridSize.cols}, 1fr)`};\n\n\tfor(let t = 0; t < props.gridSize.rows; t++) {\n\t\tfor(let e = 0; e < props.gridSize.cols; e++) {\n\t\t\tlet boxId = t + \"_\" + e;\n\t\t\tboxClass = props.gameState.gridFull[t][e] ? \"Box on\" : \"Box off\"\n\t\t\trowsArr.push(\n\t\t\t\t<Box \n\t\t\t\t\tboxClass={boxClass}\n\t\t\t\t\tkey={boxId}\n\t\t\t\t\tboxId={boxId}\n\t\t\t\t\trow={t}\n\t\t\t\t\tcol={e}\n\t\t\t\t\tselectBox={props.selectBox}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"Grid\" style={gridStyle}>\n\t\t\t{rowsArr}\n\t\t</div>\n\t)\n}\n\nexport default Grid;","import React, { useState } from 'react';\n\nconst Buttons = (props) => {\n\tconst [playButton, setPlayButton] = useState(true);\n\n\tconst togglePlay = () => {\n\t\tprops.togglePlaying();\n\t\tsetPlayButton(!playButton)\n\t}\n\n\treturn(\n\t\t<div className=\"BottomBar\">\n\t\t\t<button onClick={togglePlay}>{playButton ? \"Play\" : \"Pause\"}</button>\n\t\t\t<button onClick={props.oneStep}>Single Step</button>\n\t\t\t<button onClick={props.clear}>Clear</button>\n\t\t\t<button onClick={props.randomSeed}>Random</button>\n\t\t\t<button onClick={props.decreaseSpeed}>Slower</button>\n\t\t\t<button onClick={props.increaseSpeed}>Faster!</button>\n\t\t</div>\n\t)\n\n}\n\nexport default Buttons;","// Home component\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Grid from './Grid';\nimport Buttons from './Buttons'\nconst GridFunctions = require('../utils/GridFunctions');\nconst gridSize = {rows: 33, cols: 33}\n\nconst Home = () => {\n\n\t// --- State ---\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [gameState, setGameState] = useState({\n\t\tgridFull: GridFunctions.initGrid(gridSize.rows, gridSize.cols),\n\t\tgeneration: 0\n\t})\n\tconst [speed, setSpeed] = useState({speed: 500})\n\n\t// If isPlaying = true, useEffect will run oneStep()\n\tfunction togglePlaying() {\n\t\tsetIsPlaying(!isPlaying);\n\t}\n\n\tuseEffect(() => {\n\t\tlet interval = null;\n\t\tif (isPlaying) {\n\t\t\tinterval = setInterval(() => {\n\t\t\t\tlet newGrid = GridFunctions.gameLogic(gameState.gridFull);\n\t\t\t\tsetGameState({\n\t\t\t\t\tgridFull: newGrid,\n\t\t\t\t\tgeneration: gameState.generation + 1\n\t\t\t\t})\n\t\t\t}, speed.speed);\n\t\t}\n\t\treturn () => clearInterval(interval);\n\t}, [isPlaying, gameState.gridFull, gameState.generation,speed.speed]);\n\n\t// --- Move forward one step ---\n\tconst oneStep = () => {\n\t\tlet newGrid = GridFunctions.gameLogic(gameState.gridFull);\n\t\tsetGameState({\n\t\t\tgridFull: newGrid,\n\t\t\tgeneration: gameState.generation + 1\n\t\t})\n\t}\n\n\t// --- Click box on/off --- \n\tconst selectBox = (row, col) => {\n\t\tif(!isPlaying){\n\t\t\tlet gridCopy = gameState.gridFull;\n\t\t\tgridCopy[row][col] = !gridCopy[row][col];\n\t\t\tsetGameState({\n\t\t\t\tgridFull: gridCopy,\n\t\t\t\tgeneration: gameState.generation\n\t\t\t});\n\t\t}\n\t}\n\n\t// --- Clear grid ---\n\tconst clear = () => {\n\t\tsetGameState({\n\t\t\tgridFull: GridFunctions.initGrid(gridSize.cols,gridSize.rows, 1),\n\t\t\tgeneration: 0\n\t\t})\n\t}\n\n\t// --- Randomize grid ---\n\tconst randomSeed = () => {\n\t\tsetGameState({\n\t\t\tgridFull: GridFunctions.initGrid(gridSize.cols,gridSize.rows, 0.85),\n\t\t\tgeneration: 0\n\t\t})\n\t}\n\n\tconst increaseSpeed = () => {\n\t\tif(speed.speed > 200){\n\t\t\tsetSpeed({speed: speed.speed - 25})\n\t\t}\n\t}\n\n\tconst decreaseSpeed = () => {\n\t\tsetSpeed({speed: speed.speed + 25})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Header gameState={gameState} speed={speed} />\n\t\t\t<Grid gameState={gameState} selectBox={selectBox} gridSize={gridSize}/>\n\t\t\t<Buttons\n\t\t\t\ttogglePlaying={togglePlaying}\n\t\t\t\toneStep={oneStep}\n\t\t\t\tclear={clear}\n\t\t\t\trandomSeed={randomSeed}\n\t\t\t\tdecreaseSpeed={decreaseSpeed}\n\t\t\t\tincreaseSpeed={increaseSpeed}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\n\nexport default Home;","import React from 'react';\nimport '../style/Intro.scss';\n\nconst Intro = (props) => {\n\n\tconst playGame = () => {\n\t\tprops.history.push('/game');\n\t}\n\n\treturn (\n\t\t<div className=\"Intro\">\n\t\t\t<div className=\"Content\">\n\t\t\t\t<div className=\"Title\">\n\t\t\t\t\t<h2>Conway's Game of Life</h2>\n\t\t\t\t</div>\n\t\t\t\t<h3>Rules of the game:</h3>\n\t\t\t\t<p>Any live cell with two or three live neighbours survives.</p>\n\t    \t\t<p>Any dead cell with three live neighbours becomes a live cell.</p>\n\t    \t\t<p>All other live cells die in the next generation. Similarly, all other dead cells stay dead.</p>\n\t\t\t</div>\n\t\t\t<button onClick={playGame}>Play Game</button>\n\t\t</div>\n\t)\n}\n\nexport default Intro;","// Start Main App (2nd level)\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Components\nimport Home from './components/Home.js'\nimport Intro from './components/Intro.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Intro} />\n      <Route path=\"/game\" component={Home} />\n    </div>\n  );\n}\n\nexport default App;\n","// Program initialize (1st level)\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport './style/reset.scss';\nimport './style/index.scss';\n\n// Load App\nimport App from './App';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n\t<Router history={history}>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}